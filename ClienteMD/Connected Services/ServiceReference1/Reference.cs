//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClienteMD.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RespuestaLogin", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuegoAhorcado.Modelo.Poco")]
    [System.SerializableAttribute()]
    public partial class RespuestaLogin : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClienteMD.ServiceReference1.Jugador DatosJugadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MensajeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClienteMD.ServiceReference1.Jugador DatosJugador {
            get {
                return this.DatosJugadorField;
            }
            set {
                if ((object.ReferenceEquals(this.DatosJugadorField, value) != true)) {
                    this.DatosJugadorField = value;
                    this.RaisePropertyChanged("DatosJugador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((this.ErrorField.Equals(value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mensaje {
            get {
                return this.MensajeField;
            }
            set {
                if ((object.ReferenceEquals(this.MensajeField, value) != true)) {
                    this.MensajeField = value;
                    this.RaisePropertyChanged("Mensaje");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Jugador", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuegoAhorcado.Modelo.Poco")]
    [System.SerializableAttribute()]
    public partial class Jugador : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FechaNacimientoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PuntajeGlobalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefonoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FechaNacimiento {
            get {
                return this.FechaNacimientoField;
            }
            set {
                if ((object.ReferenceEquals(this.FechaNacimientoField, value) != true)) {
                    this.FechaNacimientoField = value;
                    this.RaisePropertyChanged("FechaNacimiento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PuntajeGlobal {
            get {
                return this.PuntajeGlobalField;
            }
            set {
                if ((this.PuntajeGlobalField.Equals(value) != true)) {
                    this.PuntajeGlobalField = value;
                    this.RaisePropertyChanged("PuntajeGlobal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefono {
            get {
                return this.TelefonoField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefonoField, value) != true)) {
                    this.TelefonoField = value;
                    this.RaisePropertyChanged("Telefono");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mensaje", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuegoAhorcado.Modelo.Poco")]
    [System.SerializableAttribute()]
    public partial class Mensaje : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MensajeRespuestaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((this.ErrorField.Equals(value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MensajeRespuesta {
            get {
                return this.MensajeRespuestaField;
            }
            set {
                if ((object.ReferenceEquals(this.MensajeRespuestaField, value) != true)) {
                    this.MensajeRespuestaField = value;
                    this.RaisePropertyChanged("MensajeRespuesta");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Categoria", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuegoAhorcado.Modelo.Poco")]
    [System.SerializableAttribute()]
    public partial class Categoria : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdCategoriaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreCategoriaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCategoria {
            get {
                return this.IdCategoriaField;
            }
            set {
                if ((this.IdCategoriaField.Equals(value) != true)) {
                    this.IdCategoriaField = value;
                    this.RaisePropertyChanged("IdCategoria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreCategoria {
            get {
                return this.NombreCategoriaField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreCategoriaField, value) != true)) {
                    this.NombreCategoriaField = value;
                    this.RaisePropertyChanged("NombreCategoria");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Palabra", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuegoAhorcado.Modelo.Poco")]
    [System.SerializableAttribute()]
    public partial class Palabra : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdCategoriaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPalabraField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PalabraSecretaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PistaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCategoria {
            get {
                return this.IdCategoriaField;
            }
            set {
                if ((this.IdCategoriaField.Equals(value) != true)) {
                    this.IdCategoriaField = value;
                    this.RaisePropertyChanged("IdCategoria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPalabra {
            get {
                return this.IdPalabraField;
            }
            set {
                if ((this.IdPalabraField.Equals(value) != true)) {
                    this.IdPalabraField = value;
                    this.RaisePropertyChanged("IdPalabra");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PalabraSecreta {
            get {
                return this.PalabraSecretaField;
            }
            set {
                if ((object.ReferenceEquals(this.PalabraSecretaField, value) != true)) {
                    this.PalabraSecretaField = value;
                    this.RaisePropertyChanged("PalabraSecreta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pista {
            get {
                return this.PistaField;
            }
            set {
                if ((object.ReferenceEquals(this.PistaField, value) != true)) {
                    this.PistaField = value;
                    this.RaisePropertyChanged("Pista");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Partida", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuegoAhorcado.Modelo.Poco")]
    [System.SerializableAttribute()]
    public partial class Partida : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoriaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorreoAdivinadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorreoRetadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GanoLaPartidaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdAdivinadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPalabraField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPartidaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdRetadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreAdivinadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreRetadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PalabraField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PistaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Categoria {
            get {
                return this.CategoriaField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriaField, value) != true)) {
                    this.CategoriaField = value;
                    this.RaisePropertyChanged("Categoria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorreoAdivinador {
            get {
                return this.CorreoAdivinadorField;
            }
            set {
                if ((object.ReferenceEquals(this.CorreoAdivinadorField, value) != true)) {
                    this.CorreoAdivinadorField = value;
                    this.RaisePropertyChanged("CorreoAdivinador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorreoRetador {
            get {
                return this.CorreoRetadorField;
            }
            set {
                if ((object.ReferenceEquals(this.CorreoRetadorField, value) != true)) {
                    this.CorreoRetadorField = value;
                    this.RaisePropertyChanged("CorreoRetador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Fecha {
            get {
                return this.FechaField;
            }
            set {
                if ((this.FechaField.Equals(value) != true)) {
                    this.FechaField = value;
                    this.RaisePropertyChanged("Fecha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GanoLaPartida {
            get {
                return this.GanoLaPartidaField;
            }
            set {
                if ((this.GanoLaPartidaField.Equals(value) != true)) {
                    this.GanoLaPartidaField = value;
                    this.RaisePropertyChanged("GanoLaPartida");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdAdivinador {
            get {
                return this.IdAdivinadorField;
            }
            set {
                if ((this.IdAdivinadorField.Equals(value) != true)) {
                    this.IdAdivinadorField = value;
                    this.RaisePropertyChanged("IdAdivinador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPalabra {
            get {
                return this.IdPalabraField;
            }
            set {
                if ((this.IdPalabraField.Equals(value) != true)) {
                    this.IdPalabraField = value;
                    this.RaisePropertyChanged("IdPalabra");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPartida {
            get {
                return this.IdPartidaField;
            }
            set {
                if ((this.IdPartidaField.Equals(value) != true)) {
                    this.IdPartidaField = value;
                    this.RaisePropertyChanged("IdPartida");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdRetador {
            get {
                return this.IdRetadorField;
            }
            set {
                if ((this.IdRetadorField.Equals(value) != true)) {
                    this.IdRetadorField = value;
                    this.RaisePropertyChanged("IdRetador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreAdivinador {
            get {
                return this.NombreAdivinadorField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreAdivinadorField, value) != true)) {
                    this.NombreAdivinadorField = value;
                    this.RaisePropertyChanged("NombreAdivinador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreRetador {
            get {
                return this.NombreRetadorField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreRetadorField, value) != true)) {
                    this.NombreRetadorField = value;
                    this.RaisePropertyChanged("NombreRetador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Palabra {
            get {
                return this.PalabraField;
            }
            set {
                if ((object.ReferenceEquals(this.PalabraField, value) != true)) {
                    this.PalabraField = value;
                    this.RaisePropertyChanged("Palabra");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pista {
            get {
                return this.PistaField;
            }
            set {
                if ((object.ReferenceEquals(this.PistaField, value) != true)) {
                    this.PistaField = value;
                    this.RaisePropertyChanged("Pista");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Turno", Namespace="http://schemas.datacontract.org/2004/07/ServicioJuegoAhorcado.Modelo.Poco")]
    [System.SerializableAttribute()]
    public partial class Turno : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IntentosRestantesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LetraField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IntentosRestantes {
            get {
                return this.IntentosRestantesField;
            }
            set {
                if ((this.IntentosRestantesField.Equals(value) != true)) {
                    this.IntentosRestantesField = value;
                    this.RaisePropertyChanged("IntentosRestantes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Letra {
            get {
                return this.LetraField;
            }
            set {
                if ((object.ReferenceEquals(this.LetraField, value) != true)) {
                    this.LetraField = value;
                    this.RaisePropertyChanged("Letra");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/logear", ReplyAction="http://tempuri.org/IService1/logearResponse")]
        ClienteMD.ServiceReference1.RespuestaLogin logear(string correo, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/logear", ReplyAction="http://tempuri.org/IService1/logearResponse")]
        System.Threading.Tasks.Task<ClienteMD.ServiceReference1.RespuestaLogin> logearAsync(string correo, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/insertarJugador", ReplyAction="http://tempuri.org/IService1/insertarJugadorResponse")]
        ClienteMD.ServiceReference1.Mensaje insertarJugador(ClienteMD.ServiceReference1.Jugador jugadorRegistro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/insertarJugador", ReplyAction="http://tempuri.org/IService1/insertarJugadorResponse")]
        System.Threading.Tasks.Task<ClienteMD.ServiceReference1.Mensaje> insertarJugadorAsync(ClienteMD.ServiceReference1.Jugador jugadorRegistro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editarJugador", ReplyAction="http://tempuri.org/IService1/editarJugadorResponse")]
        ClienteMD.ServiceReference1.Mensaje editarJugador(ClienteMD.ServiceReference1.Jugador jugadorRegistro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editarJugador", ReplyAction="http://tempuri.org/IService1/editarJugadorResponse")]
        System.Threading.Tasks.Task<ClienteMD.ServiceReference1.Mensaje> editarJugadorAsync(ClienteMD.ServiceReference1.Jugador jugadorRegistro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/comprobarExistenciaCorreo", ReplyAction="http://tempuri.org/IService1/comprobarExistenciaCorreoResponse")]
        bool comprobarExistenciaCorreo(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/comprobarExistenciaCorreo", ReplyAction="http://tempuri.org/IService1/comprobarExistenciaCorreoResponse")]
        System.Threading.Tasks.Task<bool> comprobarExistenciaCorreoAsync(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerPuntajeGlobal", ReplyAction="http://tempuri.org/IService1/obtenerPuntajeGlobalResponse")]
        int obtenerPuntajeGlobal(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerPuntajeGlobal", ReplyAction="http://tempuri.org/IService1/obtenerPuntajeGlobalResponse")]
        System.Threading.Tasks.Task<int> obtenerPuntajeGlobalAsync(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerDatosJugador", ReplyAction="http://tempuri.org/IService1/obtenerDatosJugadorResponse")]
        ClienteMD.ServiceReference1.Jugador obtenerDatosJugador(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerDatosJugador", ReplyAction="http://tempuri.org/IService1/obtenerDatosJugadorResponse")]
        System.Threading.Tasks.Task<ClienteMD.ServiceReference1.Jugador> obtenerDatosJugadorAsync(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerCategorias", ReplyAction="http://tempuri.org/IService1/obtenerCategoriasResponse")]
        ClienteMD.ServiceReference1.Categoria[] obtenerCategorias();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerCategorias", ReplyAction="http://tempuri.org/IService1/obtenerCategoriasResponse")]
        System.Threading.Tasks.Task<ClienteMD.ServiceReference1.Categoria[]> obtenerCategoriasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerPalabras", ReplyAction="http://tempuri.org/IService1/obtenerPalabrasResponse")]
        ClienteMD.ServiceReference1.Palabra[] obtenerPalabras();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerPalabras", ReplyAction="http://tempuri.org/IService1/obtenerPalabrasResponse")]
        System.Threading.Tasks.Task<ClienteMD.ServiceReference1.Palabra[]> obtenerPalabrasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/recuperarPartidasDisponibles", ReplyAction="http://tempuri.org/IService1/recuperarPartidasDisponiblesResponse")]
        ClienteMD.ServiceReference1.Partida[] recuperarPartidasDisponibles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/recuperarPartidasDisponibles", ReplyAction="http://tempuri.org/IService1/recuperarPartidasDisponiblesResponse")]
        System.Threading.Tasks.Task<ClienteMD.ServiceReference1.Partida[]> recuperarPartidasDisponiblesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registrarPartidaNueva", ReplyAction="http://tempuri.org/IService1/registrarPartidaNuevaResponse")]
        int registrarPartidaNueva(ClienteMD.ServiceReference1.Partida partidaNueva);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registrarPartidaNueva", ReplyAction="http://tempuri.org/IService1/registrarPartidaNuevaResponse")]
        System.Threading.Tasks.Task<int> registrarPartidaNuevaAsync(ClienteMD.ServiceReference1.Partida partidaNueva);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/verificarUnionAPartida", ReplyAction="http://tempuri.org/IService1/verificarUnionAPartidaResponse")]
        string verificarUnionAPartida(int idPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/verificarUnionAPartida", ReplyAction="http://tempuri.org/IService1/verificarUnionAPartidaResponse")]
        System.Threading.Tasks.Task<string> verificarUnionAPartidaAsync(int idPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/unirseAPartida", ReplyAction="http://tempuri.org/IService1/unirseAPartidaResponse")]
        bool unirseAPartida(int idPartida, int idAdivinador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/unirseAPartida", ReplyAction="http://tempuri.org/IService1/unirseAPartidaResponse")]
        System.Threading.Tasks.Task<bool> unirseAPartidaAsync(int idPartida, int idAdivinador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registrarTurno", ReplyAction="http://tempuri.org/IService1/registrarTurnoResponse")]
        bool registrarTurno(int idPartida, ClienteMD.ServiceReference1.Turno turno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registrarTurno", ReplyAction="http://tempuri.org/IService1/registrarTurnoResponse")]
        System.Threading.Tasks.Task<bool> registrarTurnoAsync(int idPartida, ClienteMD.ServiceReference1.Turno turno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/recuperarTurno", ReplyAction="http://tempuri.org/IService1/recuperarTurnoResponse")]
        ClienteMD.ServiceReference1.Turno recuperarTurno(int idPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/recuperarTurno", ReplyAction="http://tempuri.org/IService1/recuperarTurnoResponse")]
        System.Threading.Tasks.Task<ClienteMD.ServiceReference1.Turno> recuperarTurnoAsync(int idPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registrarPartidaGanada", ReplyAction="http://tempuri.org/IService1/registrarPartidaGanadaResponse")]
        bool registrarPartidaGanada(int idPartida, int idAdivinador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registrarPartidaGanada", ReplyAction="http://tempuri.org/IService1/registrarPartidaGanadaResponse")]
        System.Threading.Tasks.Task<bool> registrarPartidaGanadaAsync(int idPartida, int idAdivinador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/eliminarPartidaPerdidaOAbandonada", ReplyAction="http://tempuri.org/IService1/eliminarPartidaPerdidaOAbandonadaResponse")]
        bool eliminarPartidaPerdidaOAbandonada(int idPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/eliminarPartidaPerdidaOAbandonada", ReplyAction="http://tempuri.org/IService1/eliminarPartidaPerdidaOAbandonadaResponse")]
        System.Threading.Tasks.Task<bool> eliminarPartidaPerdidaOAbandonadaAsync(int idPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/verificarEstadoPartida", ReplyAction="http://tempuri.org/IService1/verificarEstadoPartidaResponse")]
        string verificarEstadoPartida(int idPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/verificarEstadoPartida", ReplyAction="http://tempuri.org/IService1/verificarEstadoPartidaResponse")]
        System.Threading.Tasks.Task<string> verificarEstadoPartidaAsync(int idPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerPartidasGanadas", ReplyAction="http://tempuri.org/IService1/obtenerPartidasGanadasResponse")]
        ClienteMD.ServiceReference1.Partida[] obtenerPartidasGanadas(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/obtenerPartidasGanadas", ReplyAction="http://tempuri.org/IService1/obtenerPartidasGanadasResponse")]
        System.Threading.Tasks.Task<ClienteMD.ServiceReference1.Partida[]> obtenerPartidasGanadasAsync(int idJugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/recuperarNombreAdivinador", ReplyAction="http://tempuri.org/IService1/recuperarNombreAdivinadorResponse")]
        string recuperarNombreAdivinador(int idPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/recuperarNombreAdivinador", ReplyAction="http://tempuri.org/IService1/recuperarNombreAdivinadorResponse")]
        System.Threading.Tasks.Task<string> recuperarNombreAdivinadorAsync(int idPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/recuperarEstadoGanador", ReplyAction="http://tempuri.org/IService1/recuperarEstadoGanadorResponse")]
        int recuperarEstadoGanador(int idPartida);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/recuperarEstadoGanador", ReplyAction="http://tempuri.org/IService1/recuperarEstadoGanadorResponse")]
        System.Threading.Tasks.Task<int> recuperarEstadoGanadorAsync(int idPartida);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ClienteMD.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ClienteMD.ServiceReference1.IService1>, ClienteMD.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClienteMD.ServiceReference1.RespuestaLogin logear(string correo, string password) {
            return base.Channel.logear(correo, password);
        }
        
        public System.Threading.Tasks.Task<ClienteMD.ServiceReference1.RespuestaLogin> logearAsync(string correo, string password) {
            return base.Channel.logearAsync(correo, password);
        }
        
        public ClienteMD.ServiceReference1.Mensaje insertarJugador(ClienteMD.ServiceReference1.Jugador jugadorRegistro) {
            return base.Channel.insertarJugador(jugadorRegistro);
        }
        
        public System.Threading.Tasks.Task<ClienteMD.ServiceReference1.Mensaje> insertarJugadorAsync(ClienteMD.ServiceReference1.Jugador jugadorRegistro) {
            return base.Channel.insertarJugadorAsync(jugadorRegistro);
        }
        
        public ClienteMD.ServiceReference1.Mensaje editarJugador(ClienteMD.ServiceReference1.Jugador jugadorRegistro) {
            return base.Channel.editarJugador(jugadorRegistro);
        }
        
        public System.Threading.Tasks.Task<ClienteMD.ServiceReference1.Mensaje> editarJugadorAsync(ClienteMD.ServiceReference1.Jugador jugadorRegistro) {
            return base.Channel.editarJugadorAsync(jugadorRegistro);
        }
        
        public bool comprobarExistenciaCorreo(string correo) {
            return base.Channel.comprobarExistenciaCorreo(correo);
        }
        
        public System.Threading.Tasks.Task<bool> comprobarExistenciaCorreoAsync(string correo) {
            return base.Channel.comprobarExistenciaCorreoAsync(correo);
        }
        
        public int obtenerPuntajeGlobal(int idJugador) {
            return base.Channel.obtenerPuntajeGlobal(idJugador);
        }
        
        public System.Threading.Tasks.Task<int> obtenerPuntajeGlobalAsync(int idJugador) {
            return base.Channel.obtenerPuntajeGlobalAsync(idJugador);
        }
        
        public ClienteMD.ServiceReference1.Jugador obtenerDatosJugador(int idJugador) {
            return base.Channel.obtenerDatosJugador(idJugador);
        }
        
        public System.Threading.Tasks.Task<ClienteMD.ServiceReference1.Jugador> obtenerDatosJugadorAsync(int idJugador) {
            return base.Channel.obtenerDatosJugadorAsync(idJugador);
        }
        
        public ClienteMD.ServiceReference1.Categoria[] obtenerCategorias() {
            return base.Channel.obtenerCategorias();
        }
        
        public System.Threading.Tasks.Task<ClienteMD.ServiceReference1.Categoria[]> obtenerCategoriasAsync() {
            return base.Channel.obtenerCategoriasAsync();
        }
        
        public ClienteMD.ServiceReference1.Palabra[] obtenerPalabras() {
            return base.Channel.obtenerPalabras();
        }
        
        public System.Threading.Tasks.Task<ClienteMD.ServiceReference1.Palabra[]> obtenerPalabrasAsync() {
            return base.Channel.obtenerPalabrasAsync();
        }
        
        public ClienteMD.ServiceReference1.Partida[] recuperarPartidasDisponibles() {
            return base.Channel.recuperarPartidasDisponibles();
        }
        
        public System.Threading.Tasks.Task<ClienteMD.ServiceReference1.Partida[]> recuperarPartidasDisponiblesAsync() {
            return base.Channel.recuperarPartidasDisponiblesAsync();
        }
        
        public int registrarPartidaNueva(ClienteMD.ServiceReference1.Partida partidaNueva) {
            return base.Channel.registrarPartidaNueva(partidaNueva);
        }
        
        public System.Threading.Tasks.Task<int> registrarPartidaNuevaAsync(ClienteMD.ServiceReference1.Partida partidaNueva) {
            return base.Channel.registrarPartidaNuevaAsync(partidaNueva);
        }
        
        public string verificarUnionAPartida(int idPartida) {
            return base.Channel.verificarUnionAPartida(idPartida);
        }
        
        public System.Threading.Tasks.Task<string> verificarUnionAPartidaAsync(int idPartida) {
            return base.Channel.verificarUnionAPartidaAsync(idPartida);
        }
        
        public bool unirseAPartida(int idPartida, int idAdivinador) {
            return base.Channel.unirseAPartida(idPartida, idAdivinador);
        }
        
        public System.Threading.Tasks.Task<bool> unirseAPartidaAsync(int idPartida, int idAdivinador) {
            return base.Channel.unirseAPartidaAsync(idPartida, idAdivinador);
        }
        
        public bool registrarTurno(int idPartida, ClienteMD.ServiceReference1.Turno turno) {
            return base.Channel.registrarTurno(idPartida, turno);
        }
        
        public System.Threading.Tasks.Task<bool> registrarTurnoAsync(int idPartida, ClienteMD.ServiceReference1.Turno turno) {
            return base.Channel.registrarTurnoAsync(idPartida, turno);
        }
        
        public ClienteMD.ServiceReference1.Turno recuperarTurno(int idPartida) {
            return base.Channel.recuperarTurno(idPartida);
        }
        
        public System.Threading.Tasks.Task<ClienteMD.ServiceReference1.Turno> recuperarTurnoAsync(int idPartida) {
            return base.Channel.recuperarTurnoAsync(idPartida);
        }
        
        public bool registrarPartidaGanada(int idPartida, int idAdivinador) {
            return base.Channel.registrarPartidaGanada(idPartida, idAdivinador);
        }
        
        public System.Threading.Tasks.Task<bool> registrarPartidaGanadaAsync(int idPartida, int idAdivinador) {
            return base.Channel.registrarPartidaGanadaAsync(idPartida, idAdivinador);
        }
        
        public bool eliminarPartidaPerdidaOAbandonada(int idPartida) {
            return base.Channel.eliminarPartidaPerdidaOAbandonada(idPartida);
        }
        
        public System.Threading.Tasks.Task<bool> eliminarPartidaPerdidaOAbandonadaAsync(int idPartida) {
            return base.Channel.eliminarPartidaPerdidaOAbandonadaAsync(idPartida);
        }
        
        public string verificarEstadoPartida(int idPartida) {
            return base.Channel.verificarEstadoPartida(idPartida);
        }
        
        public System.Threading.Tasks.Task<string> verificarEstadoPartidaAsync(int idPartida) {
            return base.Channel.verificarEstadoPartidaAsync(idPartida);
        }
        
        public ClienteMD.ServiceReference1.Partida[] obtenerPartidasGanadas(int idJugador) {
            return base.Channel.obtenerPartidasGanadas(idJugador);
        }
        
        public System.Threading.Tasks.Task<ClienteMD.ServiceReference1.Partida[]> obtenerPartidasGanadasAsync(int idJugador) {
            return base.Channel.obtenerPartidasGanadasAsync(idJugador);
        }
        
        public string recuperarNombreAdivinador(int idPartida) {
            return base.Channel.recuperarNombreAdivinador(idPartida);
        }
        
        public System.Threading.Tasks.Task<string> recuperarNombreAdivinadorAsync(int idPartida) {
            return base.Channel.recuperarNombreAdivinadorAsync(idPartida);
        }
        
        public int recuperarEstadoGanador(int idPartida) {
            return base.Channel.recuperarEstadoGanador(idPartida);
        }
        
        public System.Threading.Tasks.Task<int> recuperarEstadoGanadorAsync(int idPartida) {
            return base.Channel.recuperarEstadoGanadorAsync(idPartida);
        }
    }
}
